// Code generated by MockGen. DO NOT EDIT.
// Source: services/price.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	response "github.com/soumik1987/asset_price/response"
)

// MockIPriceService is a mock of IPriceService interface.
type MockIPriceService struct {
	ctrl     *gomock.Controller
	recorder *MockIPriceServiceMockRecorder
}

// MockIPriceServiceMockRecorder is the mock recorder for MockIPriceService.
type MockIPriceServiceMockRecorder struct {
	mock *MockIPriceService
}

// NewMockIPriceService creates a new mock instance.
func NewMockIPriceService(ctrl *gomock.Controller) *MockIPriceService {
	mock := &MockIPriceService{ctrl: ctrl}
	mock.recorder = &MockIPriceServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPriceService) EXPECT() *MockIPriceServiceMockRecorder {
	return m.recorder
}

// FetchSpotPrices mocks base method.
func (m *MockIPriceService) FetchSpotPrices(tokenAddress string) ([]*response.Price, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchSpotPrices", tokenAddress)
	ret0, _ := ret[0].([]*response.Price)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchSpotPrices indicates an expected call of FetchSpotPrices.
func (mr *MockIPriceServiceMockRecorder) FetchSpotPrices(tokenAddress interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchSpotPrices", reflect.TypeOf((*MockIPriceService)(nil).FetchSpotPrices), tokenAddress)
}
